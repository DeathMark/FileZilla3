;FileZilla 3 installation script
;Written by Tim Kosse <mailto:tim.kosse@filezilla-project.org>
;
;Requires NSIS >= 2.29

;--------------------------------
; Build environment

  !define top_srcdir @top_srcdir@
  !define srcdir @srcdir@
  !define VERSION @PACKAGE_VERSION@

;--------------------------------
;General

  ;Name and file
  Name "FileZilla Client ${VERSION}"
  OutFile "FileZilla_3_setup.exe"

  SetCompressor /SOLID LZMA

  ;Default installation folder
  InstallDir "$PROGRAMFILES\FileZilla Client"
  
  ;Get installation folder from registry if available
  InstallDirRegKey HKLM "Software\FileZilla Client" ""

;--------------------------------
;Include Modern UI

  !include "MUI.nsh"
  !include "WordFunc.nsh"
  !include Library.nsh
  !include "WinVer.nsh"
  !include "nsDialogs.nsh"
  !insertmacro VersionCompare

;--------------------------------
;Variables

  Var MUI_TEMP
  Var STARTMENU_FOLDER
  Var PREVIOUS_INSTALLDIR
  Var PREVIOUS_VERSION
  Var ALL_USERS
  Var ALL_USERS_FIXED
  Var ALL_USERS_BUTTON

;--------------------------------
;Interface Settings

  !define MUI_ICON "${top_srcdir}/src/interface/resources/FileZilla.ico"
  !define MUI_UNICON "${srcdir}/uninstall.ico"

  !define MUI_ABORTWARNING

;--------------------------------
;Pages

  !insertmacro MUI_PAGE_LICENSE "${top_srcdir}\COPYING"
  Page custom PageReinstall PageLeaveReinstall
  Page custom PageAllUsers PageLeaveAllUsers
  !insertmacro MUI_PAGE_COMPONENTS
  !insertmacro MUI_PAGE_DIRECTORY

  ;Start Menu Folder Page Configuration
  !define MUI_STARTMENUPAGE_REGISTRY_ROOT "SHCTX"
  !define MUI_STARTMENUPAGE_REGISTRY_KEY "Software\FileZilla Client"
  !define MUI_STARTMENUPAGE_REGISTRY_VALUENAME "Startmenu"
  !define MUI_STARTMENUPAGE_DEFAULTFOLDER "FileZilla Client"
  
  !insertmacro MUI_PAGE_STARTMENU Application $STARTMENU_FOLDER

  !define MUI_PAGE_CUSTOMFUNCTION_LEAVE PostInstPage
  !insertmacro MUI_PAGE_INSTFILES
  !insertmacro MUI_PAGE_FINISH
  
  !insertmacro MUI_UNPAGE_CONFIRM
  !insertmacro MUI_UNPAGE_INSTFILES
  !insertmacro MUI_UNPAGE_FINISH

Function ReadPreviousVersion

  ReadRegStr $PREVIOUS_INSTALLDIR HKLM "Software\FileZilla Client" ""

  ${If} $PREVIOUS_INSTALLDIR != ""
    ;Detect version
    ReadRegStr $PREVIOUS_VERSION HKLM "Software\FileZilla Client" "Version"
    ${If} $PREVIOUS_VERSION != ""
      StrCpy $ALL_USERS 1
      StrCpy $ALL_USERS_FIXED 1
      SetShellVarContext all
      return
    ${EndIf}
  ${EndIf}
  
  ReadRegStr $PREVIOUS_INSTALLDIR HKCU "Software\FileZilla Client" ""

  ${If} $PREVIOUS_INSTALLDIR != ""
    ;Detect version
    ReadRegStr $PREVIOUS_VERSION HKCU "Software\FileZilla Client" "Version"
    ${If} $PREVIOUS_VERSION != ""
      StrCpy $ALL_USERS 0
      StrCpy $ALL_USERS_FIXED 1
      SetShellVarContext current
      return
    ${EndIf}
  ${EndIf}

  StrCpy $ALL_USERS 1

FunctionEnd

Function .onInit

  ${If} ${AtLeastWin2000}
  ${Else}
    MessageBox MB_YESNO|MB_ICONSTOP "Unsupported operating system.$\nFileZilla ${VERSION} requires at least Windows 2000 and may not work correctly on your system.$\nDo you really want to continue with the installation?" IDYES installonoldwindows
    Abort
installonoldwindows:
  ${EndIf}
  
  Call ReadPreviousVersion

  ${If} $PREVIOUS_INSTALLDIR != ""
    StrCpy $INSTDIR $PREVIOUS_INSTALLDIR
  ${EndIf}

  !insertmacro MUI_INSTALLOPTIONS_EXTRACT_AS "${srcdir}\reinstall.ini" reinstall.ini

FunctionEnd

Function PageReinstall

  ${If} $PREVIOUS_VERSION == ""
    Abort
  ${EndIf}

  ${VersionCompare} "${VERSION}" $PREVIOUS_VERSION $R0
  IntCmp $R0 1 new_version same_version older_version

  new_version:

   !insertmacro MUI_INSTALLOPTIONS_WRITE "reinstall.ini" "Field 1" "Text" "An older version of FileZilla is installed on your system. It's recommended that you uninstall the current version before installing. Select the operation you want to perform and click Next to continue."
   !insertmacro MUI_INSTALLOPTIONS_WRITE "reinstall.ini" "Field 2" "Text" "Uninstall before installing"
   !insertmacro MUI_INSTALLOPTIONS_WRITE "reinstall.ini" "Field 3" "Text" "Do not uninstall"
   !insertmacro MUI_HEADER_TEXT "Already Installed" "Choose how you want to install FileZilla."
   StrCpy $R0 "1"
   Goto reinst_start

  older_version:

   !insertmacro MUI_INSTALLOPTIONS_WRITE "reinstall.ini" "Field 1" "Text" "A newer version of FileZilla is already installed! It is not recommended that you install an older version. If you really want to install this older version, it's better to uninstall the current version first. Select the operation you want to perform and click Next to continue."
   !insertmacro MUI_INSTALLOPTIONS_WRITE "reinstall.ini" "Field 2" "Text" "Uninstall before installing"
   !insertmacro MUI_INSTALLOPTIONS_WRITE "reinstall.ini" "Field 3" "Text" "Do not uninstall"
   !insertmacro MUI_HEADER_TEXT "Already Installed" "Choose how you want to install FileZilla."
   StrCpy $R0 "1"
   Goto reinst_start

  same_version:

   !insertmacro MUI_INSTALLOPTIONS_WRITE "reinstall.ini" "Field 1" "Text" "FileZilla ${VERSION} is already installed. Select the operation you want to perform and click Next to continue."
   !insertmacro MUI_INSTALLOPTIONS_WRITE "reinstall.ini" "Field 2" "Text" "Add/Reinstall components"
   !insertmacro MUI_INSTALLOPTIONS_WRITE "reinstall.ini" "Field 3" "Text" "Uninstall FileZilla"
   !insertmacro MUI_HEADER_TEXT "Already Installed" "Choose the maintenance option to perform."
   StrCpy $R0 "2"

  reinst_start:

  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "reinstall.ini"

FunctionEnd

Function PageLeaveReinstall

  !insertmacro MUI_INSTALLOPTIONS_READ $R1 "reinstall.ini" "Field 2" "State"

  StrCmp $R0 "1" 0 +2
    StrCmp $R1 "1" reinst_uninstall reinst_done

  StrCmp $R0 "2" 0 +3
    StrCmp $R1 "1" reinst_done reinst_uninstall

  reinst_uninstall:
  ReadRegStr $R1 SHCTX "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileZilla Client" "UninstallString"

  ;Run uninstaller
  HideWindow

    ClearErrors
    ExecWait '$R1 _?=$INSTDIR'

    IfErrors no_remove_uninstaller

    IfFileExists "$INSTDIR\uninstall.exe" 0 no_remove_uninstaller

      Delete "$R1"
      RMDir $INSTDIR

    no_remove_uninstaller:

  StrCmp $R0 "2" 0 +2
    Quit

  BringToFront

  reinst_done:

FunctionEnd

Function GetUserName

  ; Puts username of current user on top of stack

  Push $0
  Push $1
  System::Call "advapi32::GetUserName(t .r0, *i ${NSIS_MAX_STRLEN}) i.r1"
  ${If} $1 == 0
    Pop $1
    Pop $0
    Push ""
    return
  ${EndIf}

  Push $0
  Exch
  Pop $0
FunctionEnd

Function PageAllUsers

  ${If} $ALL_USERS_FIXED == 1
    Abort
  ${EndIf}

  !insertmacro MUI_HEADER_TEXT "Choose Installation Options" "Who should this application be installed for?"

  nsDialogs::Create /NOUNLOAD 1018
  Pop $0

  nsDialogs::CreateItem /NOUNLOAD STATIC ${WS_VISIBLE}|${WS_CHILD}|${WS_CLIPSIBLINGS} 0 0 0 100% 30 "Please select whether you wish to make this software available to all users or just yourself."
  Pop $R0
  
  nsDialogs::CreateItem /NOUNLOAD BUTTON ${BS_AUTORADIOBUTTON}|${BS_VCENTER}|${BS_MULTILINE}|${WS_VISIBLE}|${WS_CHILD}|${WS_CLIPSIBLINGS}|${WS_GROUP}|${WS_TABSTOP} 0 10 55 100% 30 "&Anyone who uses this computer (all users)"
  Pop $ALL_USERS_BUTTON
  
  Call GetUserName
  Pop $R0
  ${If} $R0 != ""
    nsDialogs::CreateItem /NOUNLOAD BUTTON ${BS_AUTORADIOBUTTON}|${BS_TOP}|${BS_MULTILINE}|${WS_VISIBLE}|${WS_CHILD}|${WS_CLIPSIBLINGS} 0 10 85 100% 50 "&Only for me ($R0)"
  ${Else}
    nsDialogs::CreateItem /NOUNLOAD BUTTON ${BS_AUTORADIOBUTTON}|${BS_TOP}|${BS_MULTILINE}|${WS_VISIBLE}|${WS_CHILD}|${WS_CLIPSIBLINGS} 0 10 85 100% 50 "&Only for me"
  ${EndIf}
  Pop $R0
  
  nsDialogs::CreateItem /NOUNLOAD STATIC ${WS_VISIBLE}|${WS_CHILD}|${WS_CLIPSIBLINGS} 0 0 -30 100% 30 "Installation for all users may require Administrator privileges."
  Pop $R1

  ${If} $ALL_USERS == "1"
    SendMessage $ALL_USERS_BUTTON ${BM_SETCHECK} 1 0
  ${Else}
    SendMessage $R0 ${BM_SETCHECK} 1 0
  ${EndIf}
  
  nsDialogs::Show

FunctionEnd

Function PageLeaveAllUsers

  SendMessage $ALL_USERS_BUTTON ${BM_GETCHECK} 0 0 $R0
  ${If} $R0 == 0
    StrCpy $ALL_USERS "0"
    SetShellVarContext current
  ${Else}
    StrCpy $ALL_USERS "1"
    SetShellVarContext all
  ${EndIf}

FunctionEnd

;--------------------------------
;Languages
 
  !insertmacro MUI_LANGUAGE "English"

;--------------------------------
;Installer Sections

Section "FileZilla Client" SecMain

  SetOutPath "$INSTDIR"
  
  File "..\src\interface\FileZilla.exe"
  File "..\src\putty\fzsftp.exe"
  File "${srcdir}\mingwm10.dll"
  File "${top_srcdir}\GPL.html"
  File "${top_srcdir}\NEWS"
  File "${top_srcdir}\AUTHORS"

  SetOutPath "$INSTDIR\resources"
  File "${top_srcdir}/src\interface\resources\*.xrc"
  File "${top_srcdir}/src\interface\resources\*.png"
  File "${top_srcdir}/src\interface\resources\*.xpm"
  File "${top_srcdir}/src\interface\resources\themes.xml"

  SetOutPath "$INSTDIR\resources\16x16"
  File "${top_srcdir}/src\interface\resources\16x16\*.png"

  SetOutPath "$INSTDIR\resources\32x32"
  File "${top_srcdir}/src\interface\resources\32x32\*.png"
  
  SetOutPath "$INSTDIR\resources\cyril\16x16"
  File "${top_srcdir}/src\interface\resources\cyril\16x16\*.png"

  SetOutPath "$INSTDIR\resources\cyril\32x32"
;  File "${top_srcdir}/src\interface\resources\cyril\32x32\*.png"
  
  ;Create uninstaller
  WriteUninstaller "$INSTDIR\uninstall.exe"

  WriteRegStr SHCTX "Software\FileZilla Client" "" $INSTDIR
  WriteRegStr SHCTX "Software\FileZilla Client" "Version" "${VERSION}"

  WriteRegExpandStr SHCTX "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileZilla Client" "UninstallString" "$INSTDIR\uninstall.exe"
  WriteRegExpandStr SHCTX "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileZilla Client" "InstallLocation" "$INSTDIR"
  WriteRegStr SHCTX "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileZilla Client" "DisplayName" "FileZilla Client ${VERSION}"
  WriteRegStr SHCTX "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileZilla Client" "DisplayIcon" "$INSTDIR\FileZilla.exe"
  WriteRegStr SHCTX "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileZilla Client" "DisplayVersion" "${VERSION}"
  WriteRegStr SHCTX "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileZilla Client" "URLInfoAbout" "http://filezilla-project.org/"
  WriteRegStr SHCTX "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileZilla Client" "HelpLink" "http://filezilla-project.org"
  WriteRegDWORD SHCTX "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileZilla Client" "NoModify" "1"
  WriteRegDWORD SHCTX "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileZilla Client" "NoRepair" "1"

  SetOutPath "$INSTDIR\docs"
  File "${top_srcdir}\docs\fzdefaults.xml.example"

  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
    
  ;Create shortcuts
  SetOutPath "$INSTDIR"
  CreateDirectory "$SMPROGRAMS\$STARTMENU_FOLDER"
  CreateShortCut "$SMPROGRAMS\$STARTMENU_FOLDER\Uninstall.lnk" "$INSTDIR\Uninstall.exe"
  CreateShortCut "$SMPROGRAMS\$STARTMENU_FOLDER\FileZilla.lnk" "$INSTDIR\filezilla.exe"
  
  !insertmacro MUI_STARTMENU_WRITE_END

SectionEnd

!macro INSTALLLANGFILE LANG

  SetOutPath "$INSTDIR\locales\${LANG}"
  File /oname=filezilla.mo "..\locales\${LANG}.mo"
  
!macroend

Section "Language files" SecLang

  ; installlangfiles.nsh is generated by configure and just contains a series of
  ; !insertmacro INSTALLLANGFILE <lang>
  !include installlangfiles.nsh

SectionEnd

Section "Shell Extension" SecShellExt

SetOutPath "$INSTDIR"
  !define LIBRARY_SHELL_EXTENSION
  !define LIBRARY_COM
  !define LIBRARY_IGNORE_VERSION
  !insertmacro InstallLib REGDLL NOTSHARED REBOOT_PROTECTED ../src/fzshellext/.libs\libfzshellext-0.dll $INSTDIR\fzshellext.dll "$INSTDIR"

  !define LIBRARY_X64
  ${If} ${RunningX64}
    !insertmacro InstallLib REGDLL NOTSHARED REBOOT_PROTECTED "${top_srcdir}/src/fzshellext\fzshellext_64.dll" $INSTDIR\fzshellext_64.dll "$INSTDIR"
  ${Else}
    !insertmacro InstallLib DLL NOTSHARED REBOOT_PROTECTED "${top_srcdir}/src/fzshellext\fzshellext_64.dll" $INSTDIR\fzshellext_64.dll "$INSTDIR"
  ${Endif}
  !undef LIBRARY_X64

SectionEnd

;--------------------------------
;Functions

Function PostInstPage

    FindWindow $MUI_TEMP1 "#32770" "" $HWNDPARENT
    GetDlgItem $MUI_TEMP1 $MUI_TEMP1 1016
    System::Call user32::IsWindowVisible(i$MUI_TEMP1)i.s
    Pop $MUI_TEMP1

    StrCmp $MUI_TEMP1 0 +2
    SetAutoClose false

FunctionEnd

;--------------------------------
;Descriptions

  ;Language strings
  LangString DESC_SecMain ${LANG_ENGLISH} "Required program files."
  LangString DESC_SecLang ${LANG_ENGLISH} "Language files files."
  LangString DESC_SecShellExt ${LANG_ENGLISH} "Shell extension for advanced drag && drop support. Required for drag && drop from FileZilla into Explorer."

  ;Assign language strings to sections
  !insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
    !insertmacro MUI_DESCRIPTION_TEXT ${SecMain} $(DESC_SecMain)
    !insertmacro MUI_DESCRIPTION_TEXT ${SecLang} $(DESC_SecLang)
    !insertmacro MUI_DESCRIPTION_TEXT ${SecShellExt} $(DESC_SecShellExt)
  !insertmacro MUI_FUNCTION_DESCRIPTION_END

;--------------------------------
;Uninstaller Functions

Var un.REMOVE_ALL_USERS
Var un.REMOVE_CURRENT_USER

;--------------------------------
;Uninstaller Functions

Function un.ReadPreviousVersion

  ReadRegStr $R0 HKLM "Software\FileZilla Client" ""

  ${If} $R0 != ""
    ;Detect version
    ReadRegStr $R2 HKLM "Software\FileZilla Client" "Version"
    ${If} $R2 == ""
      StrCpy $R0 ""
    ${EndIf}
  ${EndIf}

  ReadRegStr $R1 HKCU "Software\FileZilla Client" ""
  
  ${If} $R1 != ""
    ;Detect version
    ReadRegStr $R2 HKCU "Software\FileZilla Client" "Version"
    ${If} $R2 == ""
      StrCpy $R1 ""
    ${EndIf}
  ${EndIf}

  ${If} $R1 == $INSTDIR
    Strcpy $un.REMOVE_CURRENT_USER 1
  ${EndIf}
  ${If} $R0 == $INSTDIR
    Strcpy $un.REMOVE_ALL_USERS 1
  ${EndIf}
  ${If} $un.REMOVE_CURRENT_USER != 1
  ${AndIf} $un.REMOVE_ALL_USERS != 1
    ${If} $R1 != ""
      Strcpy $un.REMOVE_CURRENT_USER 1
      ${If} $R0 == $R1
        Strcpy $un.REMOVE_ALL_USERS 1
      ${EndIf}
    ${Else}
      StrCpy $un.REMOVE_ALL_USERS = 1
    ${EndIf}
  ${EndIf}

FunctionEnd

Function un.onInit

  Call un.ReadPreviousVersion
  
FunctionEnd

Function un.RemoveStartmenu

  !insertmacro MUI_STARTMENU_GETFOLDER Application $MUI_TEMP
  
  Delete "$SMPROGRAMS\$MUI_TEMP\Uninstall.lnk"
  Delete "$SMPROGRAMS\$MUI_TEMP\FileZilla.lnk"
  
  ;Delete empty start menu parent diretories
  StrCpy $MUI_TEMP "$SMPROGRAMS\$MUI_TEMP"
 
  startMenuDeleteLoop:
    RMDir $MUI_TEMP
    GetFullPathName $MUI_TEMP "$MUI_TEMP\.."
    
    IfErrors startMenuDeleteLoopDone
  
    StrCmp $MUI_TEMP $SMPROGRAMS startMenuDeleteLoopDone startMenuDeleteLoop
  startMenuDeleteLoopDone:

FunctionEnd

;--------------------------------
;Uninstaller Section

!macro UNINSTALLLANGFILE LANG

  Delete "$INSTDIR\locales\${LANG}\filezilla.mo"
  RMDir "$INSTDIR\locales\${LANG}"

!macroend

Section "Uninstall"

  !insertmacro UnInstallLib REGDLL NOTSHARED REBOOT_PROTECTED "$INSTDIR\fzshellext.dll"

  !define LIBRARY_X64
  ${If} ${RunningX64}
    !insertmacro UnInstallLib REGDLL NOTSHARED REBOOT_PROTECTED "$INSTDIR\fzshellext_64.dll"
  ${Else}
    !insertmacro UnInstallLib DLL NOTSHARED REBOOT_PROTECTED "$INSTDIR\fzshellext_64.dll"
  ${Endif}
  !undef LIBRARY_X64

  Delete "$INSTDIR\filezilla.exe"
  Delete "$INSTDIR\fzsftp.exe"
  Delete "$INSTDIR\mingwm10.dll"
  Delete "mingwm10.dll"
  Delete "$INSTDIR\GPL.html"
  Delete "$INSTDIR\NEWS"
  Delete "$INSTDIR\AUTHORS"
  Delete "$INSTDIR\resources\*.xrc"
  Delete "$INSTDIR\resources\*.png"
  Delete "$INSTDIR\resources\*.xpm"
  Delete "$INSTDIR\resources\themes.xml"
  Delete "$INSTDIR\resources\16x16\*.png"
  Delete "$INSTDIR\resources\32x32\*.png"
  Delete "$INSTDIR\resources\cyril\16x16\*.png"
  Delete "$INSTDIR\resources\cyril\32x32\*.png"

  ; uninstalllangfiles.nsh is generated by configure and just contains a series of
  ; !insertmacro UNINSTALLLANGFILE <lang>
  !include uninstalllangfiles.nsh

  Delete "$INSTDIR\uninstall.exe"

  Delete "$INSTDIR\docs\fzdefaults.xml.example"

  RMDir "$INSTDIR\locales"
  RMDir "$INSTDIR\resources\32x32"
  RMDir "$INSTDIR\resources\16x16"
  RMDir "$INSTDIR\resources\cyril\32x32"
  RMDir "$INSTDIR\resources\cyril\16x16"
  RMDir "$INSTDIR\resources\cyril"
  RMDir "$INSTDIR\resources"
  RMDir "$INSTDIR\docs"
  RMDir /REBOOTOK "$INSTDIR"

  ${If} $un.REMOVE_ALL_USERS == 1
    SetShellVarContext all
    Call un.RemoveStartmenu

    DeleteRegKey /ifempty HKLM "Software\FileZilla Client"
    DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileZilla Client"
  ${EndIf}
  ${If} $un.REMOVE_CURRENT_USER == 1
    SetShellVarContext current
    Call un.RemoveStartmenu

    DeleteRegKey /ifempty HKCU "Software\FileZilla Client"
    DeleteRegKey HKCU "Software\Microsoft\Windows\CurrentVersion\Uninstall\FileZilla Client"
  ${EndIf}

SectionEnd
