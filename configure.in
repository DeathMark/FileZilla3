AC_INIT(FileZilla, 2.9.3, tim.kosse@gmx.de)
AC_CONFIG_HEADERS([src/include/config.h])
AC_CONFIG_AUX_DIR(config)
AM_INIT_AUTOMAKE([dist-bzip2])

AC_CANONICAL_HOST

AC_PROG_CXX
AC_PROG_INSTALL
# AC_LIBTOOL_DLOPEN # This seems to be unneccessary
AC_PROG_LIBTOOL

AC_CACHE_SAVE

CFLAGS="$CFLAGS -Wall -g -fexceptions"
CXXFLAGS="$CXXFLAGS -Wall -g -fexceptions"

AM_OPTIONS_WXCONFIG

AM_PATH_WXCONFIG(2.5.3, wxWin=1, , [xrc,std])
if test "$wxWin" != 1; then
	AC_MSG_ERROR([
        	wxWidgets must be installed on your system
		but wx-config script couldn't be found.

		Please check that wx-config is in path, the directory
		where wxWidgets libraries are installed (returned by
		'wx-config --libs' command) is in LD_LIBRARY_PATH or
		equivalent variable and wxWidgets version is 2.5.3 or above.
	])
fi

AC_PATH_PROG([WXRC], [wxrc --version])
if test "x$WXRC" = "x"; then
	AC_MSG_ERROR([
		wxrc could not be found. This program gets build together with wxWidgets.
		Please make sure wxrc is within your path.
	])
fi

AC_CACHE_SAVE

CPPFLAGS="$CPPFLAGS $WX_CPPFLAGS"
CXXFLAGS="$CXXFLAGS $WX_CXXFLAGS_ONLY"
CFLAGS="$CFLAGS $WX_CFLAGS_ONLY"
LIBS="$LIBS $WX_LIBS"

# Small function to filter the flags for windres,
# so that only includes and defines are passed to windres.
parseflags() {
	WINDRESFLAGS=""
	for opt in "$@"
	do
		case "$opt" in
		-I*)
			WINDRESFLAGS="$WINDRESFLAGS --include-dir=${opt#-I}"
			;;
		-D*)
			WINDRESFLAGS="$WINDRESFLAGS $opt"
			;;
		esac
	done
}

WINDRESFLAGS=
use_resourcefile=
AC_MSG_CHECKING([whether to use windres])
if echo $host_os | grep "cygwin\|mingw" > /dev/null 2>&1; then
        if echo $WX_CPPFLAGS | grep __WXMSW__ > /dev/null 2>&1; then
		AC_MSG_RESULT([yes])
		AC_PATH_PROG([WINDRES], [windres --version])
		if test "x$WINDRES" = "x"; then
			AC_MSG_ERROR([windres could not be found, please make sure this program is within your path.])
		fi
                use_resourcefile=true
                parseflags $CPPFLAGS
	else
		AC_MSG_RESULT([no])
	fi
else
	AC_MSG_RESULT([no])
fi
AC_SUBST(WINDRES)
AC_SUBST(WINDRESFLAGS)
AM_CONDITIONAL(USE_RESOURCEFILE, test x$use_resourcefile = xtrue)

AM_CONDITIONAL(MACAPPBUNDLE, echo $WX_CPPFLAGS | grep __WXMAC__)

AM_CONDITIONAL(MAKENSISSCRIPT, echo $host_os | grep "mingw" > /dev/null 2>&1)
if echo $host_os | grep "mingw" > /dev/null 2>&1; then
  AC_CONFIG_FILES(data/install.nsi)
fi

AC_CHECK_HEADER(idna.h,, 
[
	AC_MSG_ERROR([idna.h not found which is part of GNU libidn.])
])

AC_ARG_WITH(idn-lib,
[[  --with-idn-lib=FILE     Use the given path to the idn library.]],
[
	if test "$withval" != "yes" -a "$withval" != ""; then
		IDN_LIB=$withval
	fi
])

if test "x$IDN_LIB" = "x"; then
	AC_CHECK_LIB(idn, idna_to_ascii_8z, IDN_LIB="-lidn",
		AC_MSG_ERROR([GNU libidn not found. Try using --with-idn-lib=FILE to specify the library path.])
	)
fi

LIBS="$LIBS $IDN_LIB"

AC_MSG_CHECKING([available FZ3 message catalogs])

FILEZILLA_LINGUAS_PO=
FILEZILLA_LINGUAS=

if /bin/ls > /dev/null; then
	LSPROG='/bin/ls'
else
	LSPROG='ls'
fi

if test x$srcdir = x; then
  path="locales"
else
  path="$srcdir/locales"
fi
for i in `$LSPROG $path/*.po`
do
  i=${i%.*}
  i=${i##*/}
  FILEZILLA_LINGUAS_PO=$FILEZILLA_LINGUAS_PO${FILEZILLA_LINGUAS_PO:+ }\$\(srcdir\)/$i.po
  FILEZILLA_LINGUAS_PO_NEW=$FILEZILLA_LINGUAS_PO_NEW${FILEZILLA_LINGUAS_PO_NEW:+ }$i.po.new
  FILEZILLA_LINGUAS=$FILEZILLA_LINGUAS${FILEZILLA_LINGUAS:+ }$i
done

AC_MSG_RESULT([$FILEZILLA_LINGUAS])

CATALOGS_TO_INSTALL="install-filezilla-catalogs"

# Check if we should use BinReloc
AC_MSG_CHECKING([whether to use BinReloc])
if echo $host_os | grep -i "cygwin\|mingw\|mac" > /dev/null 2>&1 ; then
  use_binreloc=no
else
  use_binreloc=yes
  CPPFLAGS="$CPPFLAGS -DENABLE_BINRELOC"
fi

AC_MSG_RESULT([$use_binreloc])
AM_CONDITIONAL(USE_BINRELOC, test $use_binreloc = yes)

AC_SUBST(WX_LIBS)
AC_SUBST(CATALOGS_TO_INSTALL)
AC_SUBST(FILEZILLA_LINGUAS)
AC_SUBST(FILEZILLA_LINGUAS_PO)
AC_SUBST(FILEZILLA_LINGUAS_PO_NEW)

AC_CONFIG_FILES(Makefile src/Makefile src/engine/Makefile src/tinyxml/Makefile
src/interface/Makefile src/interface/resources/Makefile src/include/Makefile
locales/Makefile src/interface/resources/16x16/Makefile
src/interface/resources/32x32/Makefile data/Makefile
src/interface/resources/cyril/Makefile
src/interface/resources/cyril/16x16/Makefile)
AC_OUTPUT
